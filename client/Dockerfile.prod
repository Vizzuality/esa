# Build all the things
FROM node:18.16-bookworm-slim AS base

# Install dependencies
FROM base as deps
RUN apt-get update -y && \
    apt-get upgrade -y && \
    apt-get install -y libc6  && \
    apt-get clean
WORKDIR /app

# Install node dependencies
COPY .yarn ./.yarn
COPY package.json .yarnrc.yml yarn.lock ./
COPY ./client/package.json ./client/package.json
RUN yarn client install

# Build the app
FROM base AS builder

WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY --from=deps /app/.yarn ./.yarn
COPY --from=deps /app/.yarnrc.yml ./.yarnrc.yml
COPY --from=deps /app/yarn.lock ./yarn.lock
COPY --from=deps /app/package.json ./package.json
COPY ./.prettierrc.js ./.prettierrc.js

WORKDIR /app/client
COPY ./client .

ENV NEXT_TELEMETRY_DISABLED 1

RUN yarn build

# Copy only the built files into the final image
FROM base AS runner
WORKDIR /app

ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Set the correct permission for prerender cache
RUN mkdir .next
RUN chown nextjs:nodejs .next

# Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --from=builder --chown=nextjs:nodejs /app/client/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/client/.next/static ./client/.next/static
COPY --from=builder /app/client/public ./client/public

USER nextjs

EXPOSE 3000
ENV PORT 3000
ENV HOSTNAME "0.0.0.0"

CMD ["node", "./client/server.js"]
