name: Run deploy

on:
  workflow_dispatch:
  push:
    branches:
      - develop
    paths:
      - "client/**"
      - "cms/**"
      - ".github/workflows/*"

env:
  PROJECT_NAME: "esa-gda-comms"
  IMAGE_REGISTRY: "registry.digitalocean.com/esa-gda-comms"

jobs:
  build_client_image:
    name: Build Client image and push to DO Container Registry
    runs-on: ubuntu-22.04
    outputs:
      digest: ${{ steps.capture_digest.outputs.digest }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create client env file for build
        run: |
          echo "${{ secrets.STAGING_CLIENT_ENV_FILE }}" > client/.env.local

      - name: Build and tag Client image
        run: |
          docker build -f client/Dockerfile.prod -t $IMAGE_REGISTRY/esa-gda-comms-staging-client:$GITHUB_SHA .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push $IMAGE_REGISTRY/esa-gda-comms-staging-client:$GITHUB_SHA

      - name: Capture client image digest
        id: capture_digest
        run: |
          DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $IMAGE_REGISTRY/esa-gda-comms-staging-client:$GITHUB_SHA | cut -d'@' -f2)
          echo "digest=$DIGEST" >> "$GITHUB_OUTPUT"

  build_cms_image:
    name: Build CMS image and push to DO Container Registry
    runs-on: ubuntu-22.04
    outputs:
      digest: ${{ steps.capture_digest.outputs.digest }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build and tag CMS image
        run: |
          docker build -f cms/Dockerfile.prod -t $IMAGE_REGISTRY/esa-gda-comms-staging-cms:$GITHUB_SHA .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push $IMAGE_REGISTRY/esa-gda-comms-staging-cms:$GITHUB_SHA

      - name: Capture CMS image digest
        id: capture_digest
        run: |
          DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $IMAGE_REGISTRY/esa-gda-comms-staging-cms:$GITHUB_SHA | cut -d'@' -f2)
          echo "digest=$DIGEST" >> "$GITHUB_OUTPUT"

  deploy:
    name: Deploy Client and CMS to DO App Platform
    needs: [build_client_image, build_cms_image]
    runs-on: ubuntu-22.04

    steps:
      - name: Export digests
        run: |
          echo "IMAGE_DIGEST_ESA_GDA_COMMS_STAGING_CLIENT=${{ needs.build_client_image.outputs.digest }}" >> $GITHUB_ENV
          echo "IMAGE_DIGEST_ESA_GDA_COMMS_STAGING_CMS=${{ needs.build_cms_image.outputs.digest }}" >> $GITHUB_ENV

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Fetch current DO App spec
        run: |
          doctl apps spec get esa-gda-comms-staging > app-spec.yaml

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq "https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64"
          sudo chmod +x /usr/local/bin/yq
          yq --version

      - name: Patch spec with new digests (preserve envs/ports)
        env:
          CLIENT_SVC: "esa-gda-comms-staging-client"
          CMS_SVC: "esa-gda-comms-staging-cms"
        run: |
          yq -i '
            (.services[] | select(.name == env(CLIENT_SVC)).image.registry_type) = "DOCR" |
            (.services[] | select(.name == env(CLIENT_SVC)).image.repository)    = "esa-gda-comms-staging-client" |
            (.services[] | select(.name == env(CLIENT_SVC)).image.digest)        = env(IMAGE_DIGEST_ESA_GDA_COMMS_STAGING_CLIENT) |
            (.services[] | select(.name == env(CMS_SVC)).image.registry_type)    = "DOCR" |
            (.services[] | select(.name == env(CMS_SVC)).image.repository)       = "esa-gda-comms-staging-cms" |
            (.services[] | select(.name == env(CMS_SVC)).image.digest)           = env(IMAGE_DIGEST_ESA_GDA_COMMS_STAGING_CMS)
          ' app-spec.yaml

          echo "==== Preview of updated services ===="
          yq '.services[] | {name: .name, image: .image, http_port: .http_port, envs: (.envs // [])}' app-spec.yaml

      - name: DigitalOcean App Platform deployment (v2)
        uses: digitalocean/app_action/deploy@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          app_name: esa-gda-comms-staging
          app_spec_location: ./app-spec.yaml
          print_build_logs: "true"
          print_deploy_logs: "true"
