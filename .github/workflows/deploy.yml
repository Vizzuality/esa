name: Run deploy

on:
  workflow_dispatch:
  push:
    branches:
      - develop
    paths:
      - "client/**"
      - "cms/**"
      - ".github/workflows/*"

env:
  PROJECT_NAME: "esa-gda-comms"
  IMAGE_REGISTRY: "registry.digitalocean.com/esa-gda-comms"

jobs:
  build_client_image:
    name: Build Client image and push to DO Container Registry
    runs-on: ubuntu-22.04
    outputs:
      digest: ${{ steps.capture_digest.outputs.digest }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create client env file for build
        run: |
          echo "${{ secrets.STAGING_CLIENT_ENV_FILE }}" > client/.env.local

      - name: Build and tag Client image
        run: |
          docker build -f client/Dockerfile.prod -t $IMAGE_REGISTRY/esa-gda-comms-staging-client:$GITHUB_SHA .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push $IMAGE_REGISTRY/esa-gda-comms-staging-client:$GITHUB_SHA

      - name: Capture client image digest
        id: capture_digest
        run: |
          DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $IMAGE_REGISTRY/esa-gda-comms-staging-client:$GITHUB_SHA | cut -d'@' -f2)
          echo "digest=$DIGEST" >> "$GITHUB_OUTPUT"

  build_cms_image:
    name: Build CMS image and push to DO Container Registry
    runs-on: ubuntu-22.04
    outputs:
      digest: ${{ steps.capture_digest.outputs.digest }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build and tag CMS image
        run: |
          docker build -f cms/Dockerfile.prod -t $IMAGE_REGISTRY/esa-gda-comms-staging-cms:$GITHUB_SHA .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push $IMAGE_REGISTRY/esa-gda-comms-staging-cms:$GITHUB_SHA

      - name: Capture CMS image digest
        id: capture_digest
        run: |
          DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $IMAGE_REGISTRY/esa-gda-comms-staging-cms:$GITHUB_SHA | cut -d'@' -f2)
          echo "digest=$DIGEST" >> "$GITHUB_OUTPUT"

  deploy:
    name: Deploy Client and CMS to DO App Platform
    needs: [build_client_image, build_cms_image]
    runs-on: ubuntu-22.04

    steps:
      - name: Export per-component repo + digest
        run: |
          echo "IMAGE_REPOSITORY_ESA_GDA_COMMS_STAGING_CLIENT=esa-gda-comms-staging-client" >> $GITHUB_ENV
          echo "IMAGE_REPOSITORY_ESA_GDA_COMMS_STAGING_CMS=esa-gda-comms-staging-cms"       >> $GITHUB_ENV
          echo "IMAGE_DIGEST_ESA_GDA_COMMS_STAGING_CLIENT=${{ needs.build_client_image.outputs.digest }}" >> $GITHUB_ENV
          echo "IMAGE_DIGEST_ESA_GDA_COMMS_STAGING_CMS=${{ needs.build_cms_image.outputs.digest }}"       >> $GITHUB_ENV

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Generate App Spec with CMS envs
        run: |
          {
            echo "name: esa-gda-comms-staging"
            echo "services:"
            echo "  - name: esa-gda-comms-staging-client"
            echo "    image:"
            echo "      registry_type: DOCR"
            echo "      repository: esa-gda-comms-staging-client"
            echo "      digest: ${IMAGE_DIGEST_ESA_GDA_COMMS_STAGING_CLIENT}"
            echo "  - name: esa-gda-comms-staging-cms"
            echo "    image:"
            echo "      registry_type: DOCR"
            echo "      repository: esa-gda-comms-staging-cms"
            echo "      digest: ${IMAGE_DIGEST_ESA_GDA_COMMS_STAGING_CMS}"
            echo "    envs:"
            while IFS= read -r line; do
              [ -z "$line" ] && continue
              key="${line%%=*}"
              val="${line#*=}"
              val="${val//\"/\\\"}"
              echo "      - key: ${key}"
              echo "        value: \"${val}\""
            done <<'EOF'
${{ secrets.STAGING_CMS_ENV_FILE }}
EOF
          } > app-spec.yaml

      - name: DigitalOcean App Platform deployment (v2)
        uses: digitalocean/app_action/deploy@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          app_name: esa-gda-comms-staging
          app_spec_location: ./app-spec.yaml
          print_build_logs: "true"
          print_deploy_logs: "true"
