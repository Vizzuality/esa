name: Run deploy

on:
  workflow_dispatch:
  push:
    branches:
      - develop
    paths:
      - "client/**"
      - "cms/**"
      - ".github/workflows/*"

env:
  PROJECT_NAME: "esa-gda-comms"
  IMAGE_REGISTRY: "registry.digitalocean.com/esa-gda-comms"

jobs:
  build_client_image:
    name: Build Client image and push to DO Container Registry
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build and tag Client image
        run: |
          docker build -f client/Dockerfile.prod -t $IMAGE_REGISTRY/esa-gda-comms-staging-client:$GITHUB_SHA client

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push $IMAGE_REGISTRY/esa-gda-comms-staging-client:$GITHUB_SHA

      - name: Remove old images from Container Registry
        uses: martintomas/docr-image-remove@v1
        with:
          image_repository: esa-gda-comms-staging-client
          buffer_size: 5

  build_cms_image:
    name: Build CMS image and push to DO Container Registry
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build and tag CMS image
        run: |
          docker build -f cms/Dockerfile.prod -t $IMAGE_REGISTRY/esa-gda-comms-staging-cms:$GITHUB_SHA cms

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push $IMAGE_REGISTRY/esa-gda-comms-staging-cms:$GITHUB_SHA

      - name: Remove old images from Container Registry
        uses: martintomas/docr-image-remove@v1
        with:
          image_repository: esa-gda-comms-staging-cms
          buffer_size: 5

  deploy:
    name: Deploy Client and CMS to DO App Platform
    needs: [build_client_image, build_cms_image]
    runs-on: ubuntu-22.04

    steps:
      - name: Export per-component repo + tag (v2 inputs)
        run: |
          # Define repos y tags que usarÃ¡ el action v2
          echo "IMAGE_REPOSITORY_ESA_GDA_COMMS_STAGING_CLIENT=esa-gda-comms-staging-client" >> $GITHUB_ENV
          echo "IMAGE_REPOSITORY_ESA_GDA_COMMS_STAGING_CMS=esa-gda-comms-staging-cms"       >> $GITHUB_ENV

          echo "IMAGE_TAG_ESA_GDA_COMMS_STAGING_CLIENT=${GITHUB_SHA}" >> $GITHUB_ENV
          echo "IMAGE_TAG_ESA_GDA_COMMS_STAGING_CMS=${GITHUB_SHA}"    >> $GITHUB_ENV

          echo "Repos y tags definidos:"
          echo "  client -> repo=esa-gda-comms-staging-client tag=${GITHUB_SHA}"
          echo "  cms    -> repo=esa-gda-comms-staging-cms    tag=${GITHUB_SHA}"

      - name: DigitalOcean App Platform deployment (v2)
        uses: digitalocean/app_action/deploy@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          app_name: esa-gda-comms-staging
          print_build_logs: "true"
          print_deploy_logs: "true"
