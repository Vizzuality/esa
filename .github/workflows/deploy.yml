name: Run deploy

on:
  workflow_dispatch:
  push:
    branches:
      - develop
    paths:
      - "client/**"
      - "cms/**"
      - ".github/workflows/*"

env:
  PROJECT_NAME: "esa-gda-comms"
  IMAGE_REGISTRY: "registry.digitalocean.com/esa-gda-comms"

jobs:
  build_client_image:
    name: Build Client image and push to DO Container Registry
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create client env file for build
        run: |
          echo "${{ secrets.STAGING_CLIENT_ENV_FILE }}" > client/.env.local

      - name: Build and tag Client image
        run: |
          docker build -f client/Dockerfile.prod -t $IMAGE_REGISTRY/esa-gda-comms-staging-client:staging .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push $IMAGE_REGISTRY/esa-gda-comms-staging-client:staging

  build_cms_image:
    name: Build CMS image and push to DO Container Registry
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build and tag CMS image
        run: |
          docker build -f cms/Dockerfile.prod -t $IMAGE_REGISTRY/esa-gda-comms-staging-cms:staging .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push $IMAGE_REGISTRY/esa-gda-comms-staging-cms:staging

  deploy:
    name: Deploy Client and CMS to DO App Platform
    needs: [build_client_image, build_cms_image]
    runs-on: ubuntu-22.04

    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Trigger redeploy in DigitalOcean
        run: |
          doctl apps update esa-gda-comms-staging \
            --spec <(doctl apps spec get esa-gda-comms-staging | \
            yq '.services[].image.tag="staging"')
