name: Run deploy

on:
  workflow_dispatch:
  push:
    branches:
      - develop
    paths:
      - "client/**"
      - "cms/**"
      - ".github/workflows/*"

env:
  PROJECT_NAME: "esa-gda-comms"
  IMAGE_REGISTRY: "registry.digitalocean.com/esa-gda-comms"

jobs:
  build_client_image:
    name: Build Client image and push to DO Container Registry
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create client env file for build
        run: |
          echo "${{ secrets.STAGING_CLIENT_ENV_FILE }}" > client/.env.local
      - name: Build and tag Client image
        run: |
          docker build -f client/Dockerfile.prod -t $IMAGE_REGISTRY/esa-gda-comms-staging-client:$GITHUB_SHA .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push $IMAGE_REGISTRY/esa-gda-comms-staging-client:$GITHUB_SHA

      - name: Remove old images from Container Registry
        uses: martintomas/docr-image-remove@v1
        with:
          image_repository: esa-gda-comms-staging-client
          buffer_size: 5

  build_cms_image:
    name: Build CMS image and push to DO Container Registry
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build and tag CMS image
        run: |
          docker build -f cms/Dockerfile.prod -t $IMAGE_REGISTRY/esa-gda-comms-staging-cms:$GITHUB_SHA .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push $IMAGE_REGISTRY/esa-gda-comms-staging-cms:$GITHUB_SHA

      - name: Remove old images from Container Registry
        uses: martintomas/docr-image-remove@v1
        with:
          image_repository: esa-gda-comms-staging-cms
          buffer_size: 5
  deploy:
    name: Deploy Client and CMS to DO App Platform
    needs: [build_client_image, build_cms_image]
    runs-on: ubuntu-22.04

    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      # ðŸ”¹ Espera breve por consistencia de DOCR (1 minuto)
      - name: Wait for DOCR consistency
        run: sleep 60

      # ðŸ”¹ Verifica que los tags existen y captura sus digests
      - name: Verify images exist in DOCR and capture digests
        run: |
          echo "Looking for tag ${GITHUB_SHA} in DOCRâ€¦"

          # CLIENT
          doctl registry repository list-manifests esa-gda-comms-staging-client --format Digest,Tags --no-header | tee /tmp/client.txt
          CLIENT_DIGEST=$(awk -v sha="${GITHUB_SHA}" '$0 ~ sha {print $1}' /tmp/client.txt)
          echo "CLIENT_DIGEST=$CLIENT_DIGEST"

          # CMS
          doctl registry repository list-manifests esa-gda-comms-staging-cms --format Digest,Tags --no-header | tee /tmp/cms.txt
          CMS_DIGEST=$(awk -v sha="${GITHUB_SHA}" '$0 ~ sha {print $1}' /tmp/cms.txt)
          echo "CMS_DIGEST=$CMS_DIGEST"

          # Exportar variables de entorno
          echo "IMAGE_REPOSITORY_ESA_GDA_COMMS_STAGING_CLIENT=esa-gda-comms-staging-client" >> $GITHUB_ENV
          echo "IMAGE_REPOSITORY_ESA_GDA_COMMS_STAGING_CMS=esa-gda-comms-staging-cms"       >> $GITHUB_ENV
          echo "IMAGE_DIGEST_ESA_GDA_COMMS_STAGING_CLIENT=${CLIENT_DIGEST}" >> $GITHUB_ENV
          echo "IMAGE_DIGEST_ESA_GDA_COMMS_STAGING_CMS=${CMS_DIGEST}"       >> $GITHUB_ENV

          # Verifica que existen digests vÃ¡lidos
          [ -n "$CLIENT_DIGEST" ] || { echo "::error::No digest found for client image tag ${GITHUB_SHA}"; exit 1; }
          [ -n "$CMS_DIGEST" ]    || { echo "::error::No digest found for CMS image tag ${GITHUB_SHA}"; exit 1; }

      - name: Echo vars for deploy (masked)
        run: |
          echo "Client repo: esa-gda-comms-staging-client"
          echo "Client digest: ${IMAGE_DIGEST_ESA_GDA_COMMS_STAGING_CLIENT}"
          echo "CMS repo: esa-gda-comms-staging-cms"
          echo "CMS digest: ${IMAGE_DIGEST_ESA_GDA_COMMS_STAGING_CMS}"

      # ðŸ”¹ Deploy con app_action usando digests
      - name: DigitalOcean App Platform deployment (v2)
        uses: digitalocean/app_action/deploy@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          app_name: esa-gda-comms-staging
          print_build_logs: "true"
          print_deploy_logs: "true"
